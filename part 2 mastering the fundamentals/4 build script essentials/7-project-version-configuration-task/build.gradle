// file() is from Project interface - java.io.File relative to project directory
ext.versionFile = file('version.properties')

// !!! Configuration Task - without doLast. Execute in the configuration phase
task loadVersion {
    project.version = readVersion()
}

ProjectVersion readVersion() {
    logger.quiet 'Reading the version file.'
    if (!versionFile.exists()) {
        throw new GradleException("Required version file does not exist: $versionFile.canonicalPath")
    }

    Properties versionProps = new Properties()
    versionFile.withInputStream { stream ->
        versionProps.load(stream) // load properties
    }

    // no need return keyword if it is last statement
    // return new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.release.toBoolean())
    new ProjectVersion(versionProps.major.toInteger(), versionProps.minor.toInteger(), versionProps.release.toBoolean())
}

task printVersion doLast {
    logger.quiet "Version: $version"
}

class ProjectVersion {
    Integer major
    Integer minor
    Boolean release

    ProjectVersion(Integer major, Integer minor) {
        this.major = major
        this.minor = minor
        this.release = Boolean.FALSE
    }

    ProjectVersion(Integer major, Integer minor, Boolean release) {
        this(major, minor)
        this.release = release
    }

    @Override
    String toString() {
        "$major.$minor${release ? '' : '-SNAPSHOT'}"
    }
}

// ----------

task wrapper7(type: Wrapper) {
    gradleVersion = '7.0'
}
